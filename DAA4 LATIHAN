var1 = 1
var2 = 2
var1,var2 = var2,var1
print(var1,var2)
2 1

list = [10,5,3,2,6,7,1]
panjangindex = len(list)-1
print(0,list)
for i in range (panjangindex):
    if list[i]>list[i+1]:
        list[i],list[i+1]=list[i+1],list[i]
    print (i+1,list)
0 [10, 5, 3, 2, 6, 7, 1]
1 [5, 10, 3, 2, 6, 7, 1]
2 [5, 3, 10, 2, 6, 7, 1]
3 [5, 3, 2, 10, 6, 7, 1]
4 [5, 3, 2, 6, 10, 7, 1]
5 [5, 3, 2, 6, 7, 10, 1]
6 [5, 3, 2, 6, 7, 1, 10]

def bubblesort(list):
    panjangindex = len(list)-1
    for passno in range(panjangindex,0,-1):
        for i in range(passno):
            if list[i]>list[i+1]:
                list[i],list[i+1] = list[i+1],list[i]
    return list

def insertionsort(list):
    for i in range (1,len(list)):
        j = i - 1
        temp = list[i]
        while (list[j]>temp)and(j>=0):
            list[j+1] = list [j]
            j = j - 1
        list [j+1] = temp
    return list

def selectionsort(list):
    for isi_slot in range (len(list)-1, 0, -1): # ascending
        max_index = 0
        for lokasi in range (1,isi_slot + 1):
            if list[lokasi] > list[max_index]:
                max_index = lokasi
        list[isi_slot], list[max_index] = list[max_index],list[isi_slot]
list = [70,15,25,19,34,44]
selectionsort(list)
print(list)
[15, 19, 25, 34, 44, 70]

def linearSearch(list,item):
    index = 0
    found = False
    while index < len(list) and found is False:
        if list[index] == item:
            found = True
        else:
            index = index + 1
    return found
list = [12,33,11,99,22,55,90]
print(linearSearch(list,12))
print(linearSearch(list,91))
True
False

def binarysearch (list,item):
    first = 0
    last = len(list)-1
    found = False
    while first <= last and not found:
        midpoint = (first + last)//2
        if list[midpoint] == item:
            found = True
        else:
            if item < list[midpoint]:
                last = midpoint-1
            else:
                first = midpoint+1
    return found
list = [12,33,11,99,22,55,90]
sorted_list = bubblesort(list)
print(binarysearch(list,12))
print(binarysearch(list,91))
True
False

def intpolsearch(list,x):
    idx0 = 0
    idxn = (len(list)-1)
    found = False
    while idxn != idx0 and x >= list[idx0] and x <= list[idxn]:
        mid = idx0 + int(float(idxn-idx0)/(list[idxn]-list[idx0])*(x-list[idx0]))
        if list [mid] == x :
            found = True
            return found
        if list[mid] < x:
            idx0 = mid + 1
    return found
list = [12,33,11,99,22,55,90]
sorted_list = bubblesort(list)
print(intpolsearch(list,12))
print(intpolsearch(list,91))
True
False

var1 = 1
var2 = 2
var3 = 3
var1,var2,var3= var3,var1,var2
print(var1,var2,var3)
3 1 2

list = [100,20,60,90,40,30,10]
panjangindex = len(list)-1
print(0,list)
for i in range (panjangindex,0,-1):
    for j in range (i):
        if list[j]>list[j+1]:
            list[j],list[j+1] = list[j+1],list[j]
    tampilan = panjangindex - i
    print(tampilan+1,list)
0 [100, 20, 60, 90, 40, 30, 10]
1 [20, 60, 90, 40, 30, 10, 100]
2 [20, 60, 40, 30, 10, 90, 100]
3 [20, 40, 30, 10, 60, 90, 100]
4 [20, 30, 10, 40, 60, 90, 100]
5 [20, 10, 30, 40, 60, 90, 100]
6 [10, 20, 30, 40, 60, 90, 100]

var = [89,12,57,16,25,11,75]
for i in range (1,len(var)):
    j = i - 1
    temp = var[i]
    while (var[j]>temp) and (j>=0):
        var[j+1] = var[j]
        j = j - 1
    var [j+1] = temp
print(var)
[11, 12, 16, 25, 57, 75, 89]

list = [89,12,57,16,25]
for isi_slot in range (len(list)-1, 0, -1): # ascending
    max_index = 0
    for lokasi in range (1,isi_slot + 1):
        if list[lokasi] > list[max_index]:
            max_index = lokasi
        list[isi_slot], list[max_index] = list[max_index],list[isi_slot]
print (list)
for isi_slot in range (len(list)-1, 0, -1): # descending
    max_index = 0
    for lokasi in range (1,isi_slot + 1):
        if list[lokasi] < list[max_index]:
            max_index = lokasi
        list[isi_slot], list[max_index] = list[max_index],list[isi_slot]
print (list)
[12, 16, 25, 57, 89]
[89, 57, 25, 16, 12]

def Bubblesort(x):
    panjangindex = len(x)-1
    for passno in range(panjangindex,0,-1):
        for i in range(passno):
            if x[i]>x[i+1]:
                x[i],x[i+1] = x[i+1],x[i]
    return x

def pencarian_biner(x,item):
    first = 0
    last = len(x)-1
    found = False
    while first <= last and not found :
        midpoint = (first + last)//2
        if x[midpoint] == item:
            found = True
        else:
            if item < x [midpoint]:
                last = midpoint-1
            else:
                first = midpoint+1
    return found

huruf = ['y','u','i','w','a','q','u','j','p']
x = [] #converting to unicode
for i in huruf:
    x.append(ord(i))
cari = 'a'
sorted_list = Bubblesort(x)
print(x)
print(pencarian_biner(x,ord(cari)))
[97, 105, 106, 112, 113, 117, 117, 119, 121]
True

def pencarian_intpol(huruf,item):
    i = 0
    j = (len(huruf)-1)
    found = False
    while  i <= j and item >= huruf[i] and item <= huruf[j]:
        mid = i + int(float(j-i)/(huruf[j]-huruf[i])*(item - huruf[i]))
        if huruf[mid] == item:
            found = True
            return found
        if huruf[mid]<item:
            i = mid + 1
    return found
huruf = ['y','u','i','w','a','q','u','j','p']
x = [] #converting to unicode
for i in huruf:
    x.append(ord(i))
sorted_list = Bubblesort(x)
cari = 'a'
print(x)
print(pencarian_intpol(x,int(ord(cari))))
[97, 105, 106, 112, 113, 117, 117, 119, 121]
True
